import { {% for interface in importInterfaces(operations) -%}{{ interface }},{%- endfor %} } from '@/http/nodegen/interfaces';
{% if pathMethodsHaveAttr(operations, 'security') %}import {JwtAccess} from '@/http/nodegen/interfaces/JwtAccess';{% endif %}
{% if pathMethodsHaveAttr(operations, 'x-passRequest') %}import NodegenRequest from '../http/interfaces/NodegenRequest';{% endif %}
{% if mockServer %}import {{ ucFirst(operation_name) }}DomainMock from './__mocks__/{{ ucFirst(operation_name) }}DomainMock'{% endif %}

class {{ ucFirst(operation_name) }}Domain {
  {% for op in operations -%}
    {% for method, path in op.path -%}
      {% if isValidMethod(method) %}
  /**
   * Operation ID: {{ path.operationId }}
   * {% if path.summary %}Summary: {{ path.summary }}{% endif %}
   * {% if path.description %}Description: {{ path.description | trim }}{% endif %}
   */
  public async {{ path.operationId }} ({{ pathParamsToDomainParams(method, path, true, false, 'params') }}): Promise<{{ path['x-response-definitions']['200'] if path['x-response-definitions']['200'] else 'any' }}> {
    {% if mockServer %}
    return {{ ucFirst(operation_name) }}DomainMock.{{ path.operationId }}({{ pathParamsToDomainParams(method, path) }});
    {% else %}
    return {};
    {% endif %}
  }
      {% endif %}
    {%- endfor %}
  {%- endfor %}
}

export default new {{ ucFirst(operation_name) }}Domain();
